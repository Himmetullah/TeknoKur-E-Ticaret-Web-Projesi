@using Layer.Data
@model List<TblKategoriler>
@{
	ViewData["Title"] = "Index";
	Layout = "~/Views/Shared/_CustomerLayout.cshtml";
}
<style>
	body {
		font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
		margin: 0;
		padding: 0;
		background-color: #f4f7fa;
		color: #333;
	}

	.kendin-topla-container {
		display: flex;
		max-width: 1200px;
		margin: 30px auto;
		background-color: #ffffff;
		border-radius: 8px;
		box-shadow: 0 4px 12px rgba(0, 0, 0, 0.08);
		overflow: hidden;
	}

	.left-sidebar-categories {
		width: 220px;
		padding: 20px 0;
		background-color: #f8f8f8;
		border-right: 1px solid #e0e0e0;
		flex-shrink: 0;
	}

		.left-sidebar-categories h3 {
			color: #555;
			font-size: 1.1em;
			padding: 0 20px 10px;
			margin-top: 0;
			border-bottom: 1px solid #eee;
			margin-bottom: 15px;
		}

		.left-sidebar-categories ul {
			list-style: none;
			padding: 0;
			margin: 0;
		}

	.category-item {
		cursor: pointer;
		padding: 12px 20px;
		font-weight: 500;
		color: #444;
		transition: background-color 0.2s ease, color 0.2s ease;
		border-left: 3px solid transparent;
	}

		.category-item:hover {
			background-color: #e0f2f7;
			color: #007bff;
		}

		.category-item.active {
			background-color: #007bff;
			color: white;
			border-left-color: #007bff;
		}

	.main-content-products {
		flex-grow: 1;
		padding: 20px;
	}

		.main-content-products h2 {
			color: #007bff;
			font-size: 1.5em;
			margin-bottom: 20px;
			border-bottom: 1px solid #eee;
			padding-bottom: 10px;
		}

	.product-list-grid {
		display: flex;
		flex-direction: column;
	}

	.product-list-header,
	.product-row {
		display: flex;
		align-items: center;
		padding: 12px 15px;
		border-bottom: 1px solid #f0f0f0;
	}

	.product-list-header {
		background-color: #f0f4f7;
		font-weight: 600;
		color: #666;
		border-radius: 4px 4px 0 0;
		margin-bottom: 5px;
	}

	.product-row:last-child {
		border-bottom: none;
	}

	.col-img {
		flex: 0 0 80px;
		text-align: center;
	}

	.col-name {
		flex: 2;
		padding-left: 10px;
		font-weight: 500;
	}
	.col-description {
		flex: 3;
		font-size: 0.9em;
		color: #555;
	}
	.col-price {
		flex: 0 0 120px;
		text-align: right;
		font-weight: bold;
		color: #28a745;
		font-size: 1.1em;
	}
	.col-action {
		flex: 0 0 100px;
		text-align: center;
	}

	.product-row img {
		width: 50px;
		height: 50px;
		object-fit: contain;
		border: 1px solid #e0e0e0;
		border-radius: 4px;
		padding: 2px;
	}

	.product-row button {
		background-color: #007bff;
		color: white;
		border: none;
		padding: 8px 15px;
		border-radius: 5px;
		cursor: pointer;
		font-size: 0.9em;
		transition: background-color 0.2s ease;
	}

		.product-row button:hover {
			background-color: #0056b3;
		}

		.product-row button.selected {
			background-color: #dc3545;
		}

			.product-row button.selected:hover {
				background-color: #c82333;
			}

	.right-sidebar-summary {
		width: 300px;
		padding: 20px;
		background-color: #f8f8f8;
		border-left: 1px solid #e0e0e0;
		flex-shrink: 0;
	}

		.right-sidebar-summary h3 {
			color: #555;
			font-size: 1.1em;
			margin-top: 0;
			padding-bottom: 10px;
			border-bottom: 1px solid #eee;
			margin-bottom: 15px;
		}

	#selectedProducts {
		min-height: 100px;
		margin-bottom: 20px;
	}

	.selected-product-item {
		display: flex;
		justify-content: space-between;
		align-items: center;
		padding: 8px 0;
		border-bottom: 1px dashed #e0e0e0;
		font-size: 0.95em;
		color: #444;
	}

		.selected-product-item:last-child {
			border-bottom: none;
		}

		.selected-product-item span:first-child {
			flex-grow: 1;
			margin-right: 10px;
		}

		.selected-product-item span:last-child {
			font-weight: 600;
			color: #28a745;
		}


	.total-section {
		padding-top: 20px;
		border-top: 2px solid #007bff;
		text-align: right;
	}

		.total-section h3 {
			margin-bottom: 10px;
			font-size: 1.3em;
			color: #007bff;
		}

		.total-section #totalPrice {
			font-size: 1.8em;
			font-weight: 700;
			color: #28a745;
		}

	.add-to-cart-button {
		width: 100%;
		padding: 12px;
		background-color: #28a745;
		color: white;
		border: none;
		border-radius: 6px;
		cursor: pointer;
		font-size: 1.1em;
		font-weight: 600;
		transition: background-color 0.2s ease;
		margin-top: 20px;
	}

		.add-to-cart-button:hover {
			background-color: #218838;
		}

	.text-center {
		text-align: center;
	}

	.text-muted {
		color: #888;
	}

	.no-products-message {
		padding: 40px 0;
		text-align: center;
		color: #777;
		font-style: italic;
	}
</style>

<div class="kendin-topla-container">
	<div class="left-sidebar-categories">
		<h3>Kategoriler</h3>
		<ul id="categoryList">
			@foreach (var kategori in Model)
			{
				<li class="category-item" data-category-id="@kategori.KategoriId">
					@kategori.KategoriAdi
				</li>
			}
		</ul>
	</div>

	<div class="main-content-products">
		<h2 id="selectedCategoryTitle">Lütfen Bir Kategori Seçiniz</h2>
		<div id="productList">
			<div class="product-list-grid">
				<div class="product-list-header">
					<div class="col-img"></div>
					<div class="col-name">Ürün Adı</div>
					<div class="col-description">Ürün Açıklaması</div>
					<div class="col-price">Fiyat</div>
					<div class="col-action"></div>
				</div>
				<div id="productRows">
					<p class="no-products-message">Yukarıdan bir kategori seçerek ürünleri listeleyebilirsiniz.</p>
				</div>
			</div>
		</div>
	</div>

	<div class="right-sidebar-summary">
		<h3>Seçilen Ürünler</h3>
		<div id="selectedProducts">
			<p class="text-muted">Henüz ürün seçilmedi.</p>
		</div>
		<div class="total-section">
			<h3>Toplam Tutar: <span id="totalPrice">0,00</span> TL</h3>
			<button class="add-to-cart-button">Sepete Ekle</button>
		</div>
	</div>
</div>

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script>
	   var selectedProductsData = {};

	   $(document).ready(function () {
		   var $firstCategoryItem = $('#categoryList li:first');
		   if ($firstCategoryItem.length > 0) {
			   $firstCategoryItem.click();
		   }

		   $('#categoryList').on('click', '.category-item', function () {
			   $('#categoryList li').removeClass('active');
			   $(this).addClass('active');

			   var kategoriId = $(this).data('category-id');
			   var kategoriAdi = $(this).text().trim();

			   $('#selectedCategoryTitle').text(kategoriAdi + " Ürünleri");

			   $.ajax({
				   url: '@Url.Action("GetUrunlerByKategori", "KendinTopla")',
				   type: 'GET',
				   data: { kategoriId: kategoriId },
				   success: function (data) {
					   $('#productRows').html(data);

					   if (selectedProductsData[kategoriId]) {
						   var selectedProductIdForCurrentCategory = selectedProductsData[kategoriId].id;
						   $('#productRows button[data-product-id="' + selectedProductIdForCurrentCategory + '"]')
							   .addClass('selected')
							   .text('Seçildi');
					   }
				   },
				   error: function (xhr, status, error) {
					   console.error("AJAX Hatası: ", status, error, xhr.responseText);
					   $('#productRows').html('<p class="no-products-message" style="color: red;">Ürünler yüklenirken bir hata oluştu. Lütfen daha sonra tekrar deneyin.</p>');
				   }
			   });
		   });

		   $('#productRows').on('click', '.product-row button', function () {
			   var $button = $(this);
			   var productId = $button.data('product-id');
			   var productName = $button.data('product-name');
			   var productPrice = parseFloat($button.data('product-price'));
			   var categoryId = $('.category-item.active').data('category-id');
			   var categoryName = $('.category-item.active').text().trim();

			   if ($button.hasClass('selected')) {
				   $button.removeClass('selected').text('Seç');
				   delete selectedProductsData[categoryId];
			   } else {
				   $('#productRows button[data-category-id="' + categoryId + '"]').removeClass('selected').text('Seç');

				   $button.addClass('selected').text('Seçildi');
				   selectedProductsData[categoryId] = {
					   id: productId,
					   name: productName,
					   price: productPrice,
					   categoryId: categoryId,
					   categoryName: categoryName
				   };

				   var $currentCategory = $('.category-item.active');
				   var $nextCategory = $currentCategory.next('.category-item');

				   if ($nextCategory.length > 0) {
					   setTimeout(function() {
						   $nextCategory.click();
					   }, 200);
				   } else {
					   alert('Tüm ana kategorilerde ürün seçimini tamamladınız!');
				   }
			   }
			   updateSelectedProductsDisplay();
			   calculateTotalPrice();
		   });

		   function updateSelectedProductsDisplay() {
			   var $selectedProductsDiv = $('#selectedProducts');
			   $selectedProductsDiv.empty();

			   var hasProducts = false;
			   var orderedCategoryIds = Array.from($('#categoryList li')).map(li => $(li).data('category-id'));

			   orderedCategoryIds.forEach(function(categoryId) {
				   if (selectedProductsData.hasOwnProperty(categoryId)) {
					   hasProducts = true;
					   var product = selectedProductsData[categoryId];
					   $selectedProductsDiv.append(
						   '<div class="selected-product-item">' +
							   '<span><strong>' + product.categoryName + ':</strong> ' + product.name + '</span>' +
							   '<span>' + product.price.toFixed(2) + ' TL</span>' +
						   '</div>'
					   );
				   }
			   });

			   if (!hasProducts) {
				   $selectedProductsDiv.append('<p class="text-muted">Henüz ürün seçilmedi.</p>');
			   }
		   }

		   function calculateTotalPrice() {
			   var total = 0;
			   for (var categoryId in selectedProductsData) {
				   if (selectedProductsData.hasOwnProperty(categoryId)) {
					   total += selectedProductsData[categoryId].price;
				   }
			   }
			   $('#totalPrice').text(total.toFixed(2));
		   }

			$('.add-to-cart-button').on('click', function () {
		var selectedProductsDetails = [];

		for (var categoryId in selectedProductsData) {
			if (selectedProductsData.hasOwnProperty(categoryId)) {
				selectedProductsDetails.push(selectedProductsData[categoryId]);
			}
		}

		if (selectedProductsDetails.length === 0) {
			alert('Lütfen sepetinize eklemek için en az bir ürün seçiniz.');
			return;
		}

		let formData = new FormData();

		selectedProductsDetails.forEach((item, index) => {
			formData.append(`urunler[${index}][id]`, item.id);
			formData.append(`urunler[${index}][name]`, item.name);
			formData.append(`urunler[${index}][price]`, item.price);
		});

		$.ajax({
			url: '/KendinTopla/EkleToplamaUrunleri',
			type: 'POST',
			data: formData,
			contentType: false,
			processData: false,
			success: function (response) {
				alert('Ürünler sepete eklendi.');
				window.location.href = '/Home/Index';
			},
			error: function (xhr) {
				alert("Hata oluştu: " + xhr.responseText);
			}
		});
	});

	});
</script>



